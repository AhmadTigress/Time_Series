# -*- coding: utf-8 -*-
"""Trend.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zGSH3y4PdKhI3GIstCIPQIKCazYf1S4A

**Tunnel Traffic**
"""

# Commented out IPython magic to ensure Python compatibility.
from pathlib import Path
from warnings import simplefilter

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

simplefilter("ignore")  # ignore warnings to clean up output cells

# Set Matplotlib defaults
plt.style.use("ggplot")
plt.rc("figure", autolayout=True, figsize=(11, 5))
plt.rc(
    "axes",
    labelweight="bold",
    labelsize="large",
    titleweight="bold",
    titlesize=14,
    titlepad=10,
)
plot_params = dict(
    color="0.75",
    style=".-",
    markeredgecolor="0.25",
    markerfacecolor="0.25",
    legend=False,
)
# %config InlineBackend.figure_format = 'retina'


# Load Tunnel Traffick dataset
tunnel = pd.read_csv("/content/tunnel.csv", parse_dates=['Day'])
tunnel = tunnel.set_index("Day").to_period()

moving_average = tunnel.rolling(
    window=365,   # 365 days window
    center=True,    # put the average at the center of the window
    min_periods = 138     # choose about half the window size
).mean()

ax = tunnel.plot(style=".", color="0.5")
moving_average.plot(
    ax=ax, linewidth=3, title="Tunnel Traffic 365-Day Moving Average", legend=False
)

from statsmodels.tsa.deterministic import DeterministicProcess

dp = DeterministicProcess(
    index=tunnel.index,   # dates from the training data
    constant=True,     # dummy features for the bias
    order=1,
    drop=True
)
# 'in-sample' creates features for the data given in the index
X = dp.in_sample()
X.head()

from sklearn.linear_model import LinearRegression

y = tunnel["NumVehicles"]   # the target

model = LinearRegression(fit_intercept=False)
model.fit(X, y)

y_pred = pd.Series(model.predict(X), index=X.index)

ax = tunnel.plot(style=".", color="0.5", title="Tunnel Traffic - Linear Trend")
_ = y_pred.plot(ax=ax, linewidth=3, label="Trend")

X = dp.out_of_sample(steps=30)
y_fore = pd.Series(model.predict(X), index=X.index)
y_fore.head()

ax = tunnel["2005-05":].plot(title="Tunnel Traffic - Linear Trend Forecast", **plot_params)
ax = y_pred["2005-05":].plot(ax=ax, linewidth=3, label="Trend")
ax = y_fore.plot(ax=ax, linewidth=3, label="Trend Forecast", color="C3")
_ = ax.legend()

"""#In time series, in-sample data refers to the portion used to train the model, while out-of-sample data is used to test how well the model generalizes to unseen future data. This distinction helps ensure the model can make accurate predictions beyond the data it was trained on."""

